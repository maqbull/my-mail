{"version":3,"sources":["api.js","UserContext.js","LoginPage.js","UserMenu.js","Header.js","NotifyContext.js","EmailContext.js","MessageList.js","MessageViewer.js","MainPage.js","Providers.js","index.js"],"names":["FAKE_USER","firstName","lastName","username","avatar","FAKE_EMAILS","id","subject","body","LOT_OF_EMAILS","Array","fill","map","_","email","Math","floor","random","length","preview","substr","forEach","UserContext","React","createContext","UserProvider","children","useState","user","setUser","login","useCallback","logout","value","useMemo","Provider","useUser","useContext","useUserActions","LoginPage","error","setError","loading","setLoading","setUsername","password","setPassword","onLogin","className","onSubmit","event","preventDefault","Promise","resolve","reject","setTimeout","message","then","catch","htmlFor","type","name","onChange","e","target","UserMenu","isMenuVisible","setMenuVisible","avatarRef","useRef","onLogout","hideMenu","current","useEffect","document","addEventListener","removeEventListener","src","alt","onClick","vis","ref","Header","NotifyContext","NotifyProvider","messages","setMessages","addMessage","text","msgs","addedAt","Date","getTime","removeMessage","msg","filter","m","timer","setInterval","now","clearInterval","onClose","Notification","EmailContext","reducer","state","action","emails","currentEmail","EmailProvider","useReducer","dispatch","slice","setCurrentEmail","useEmail","Email","memo","MessageList","MessageViewer","MainPage","Providers","Root","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.527b4ee3.chunk.js","sourcesContent":["export const FAKE_USER = {\r\n  firstName: \"Dave\",\r\n  lastName: \"Ceddia\",\r\n  username: \"dave\",\r\n  avatar: \"https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50\",\r\n};\r\n\r\nexport const FAKE_EMAILS = [\r\n  {\r\n    id: 0,\r\n    subject: \"Hey Dave\",\r\n    body: \"Yo just wanted to say hey.\",\r\n  },\r\n  {\r\n    id: 1,\r\n    subject: \"React is Great\",\r\n    body: \"Yo just wanted to say hey.\",\r\n  },\r\n  {\r\n    id: 2,\r\n    subject: \"Learn JavaScript\",\r\n    body: \"Yo just wanted to say hey.\",\r\n  },\r\n  {\r\n    id: 3,\r\n    subject: \"Job notification\",\r\n    body: \"Yo just wanted to say hey.\",\r\n  },\r\n];\r\n\r\nconst LOT_OF_EMAILS = Array(2000)\r\n  .fill(0)\r\n  .map( _ => {\r\n    let email = FAKE_EMAILS[Math.floor(Math.random() * FAKE_EMAILS.length)];\r\n    return {\r\n      ...email,\r\n      id: Math.random(),\r\n      preview: email.body.substr(0, 46),\r\n    };\r\n  });\r\n\r\n// Generate a preview\r\nFAKE_EMAILS.forEach((email) => (email.preview = email.body.substr(0, 46)));\r\n\r\nexport default function login(username, password) {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (username === \"dave\" && password === \"secret\") {\r\n        resolve(FAKE_USER);\r\n      } else {\r\n        reject({\r\n          message: \"Invalid username or password\",\r\n        });\r\n      }\r\n    }, 300);\r\n  });\r\n}\r\nexport function fetchEmails() {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(LOT_OF_EMAILS);\r\n    }, 300);\r\n  });\r\n}\r\n\r\nexport function fetchLatestEmails() {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(\r\n        FAKE_EMAILS.map((e) => ({\r\n          ...e,\r\n          id: Math.random(),\r\n        })).slice(0,Math.floor(Math.random() * 100))\r\n      );\r\n    },3000);\r\n  });\r\n}\r\n","import React, { useState , useContext , useMemo , useCallback } from \"react\";\r\nimport {  FAKE_USER } from \"./api\";\r\n//  import {FAKE_USER} from './api'\r\n// just to avoid login \r\n\r\nconst UserContext = React.createContext();\r\n// React.createContext return object and it has 2 value\r\n// UserContext.Provider\r\n// UserContext.Consumer\r\n\r\nexport function UserProvider({ children }) {\r\n  const [user, setUser] = useState(FAKE_USER);\r\n\r\n  const login = useCallback( user => setUser(user), [] );\r\n  \r\n  const logout = useCallback (() => setUser(null), [] );\r\n\r\n  const value = useMemo( () => (\r\n  {  user , login ,logout \r\n  }) , [user , login , logout])\r\n\r\n\r\n\r\n  return <UserContext.Provider value = {value}>\r\n       {children}\r\n  </UserContext.Provider>\r\n}\r\n\r\nexport function useUser(){\r\n    const user = useContext(UserContext);\r\n    return user;\r\n}\r\n\r\nexport function useUserActions(){\r\n    const {login , logout} = useContext(UserContext);\r\n    return {login , logout};\r\n}\r\n\r\n","import React ,{useState } from 'react';\r\nimport login from './api';\r\nimport {useUserActions} from './UserContext'\r\n\r\n\r\nfunction LoginPage() {\r\n    const [error,setError] = useState(null);\r\n    const [loading , setLoading] = useState(false);\r\n    const [username , setUsername] = useState('');\r\n    const [password , setPassword] = useState('');\r\n    const {login: onLogin} = useUserActions();\r\n\r\n    const submit = event => {\r\n        event.preventDefault();\r\n        setError(null);\r\n        setLoading(true);\r\n        login(username,password)\r\n        .then(user => {\r\n            setLoading(false);\r\n            onLogin({user});\r\n        })\r\n        .catch(error => {\r\n            setError(error)\r\n            setLoading(false)\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className =\"LoginPage\">\r\n      <form onSubmit = {submit}>\r\n      <label htmlFor=\"username\">Username</label>\r\n      <input type=\"text\" name=\"username\" id=\"username\"\r\n      value = {username}\r\n      onChange = {e => setUsername(e.target.value)}\r\n      />\r\n      <label htmlFor=\"password\">Password</label>\r\n      <input type=\"password\" name=\"password\" id=\"password\"\r\n      value = {password}\r\n      onChange = {e => setPassword(e.target.value)}\r\n      />\r\n    <button\r\n    >Log In</button>\r\n      </form>\r\n        { loading ? ( <div className=\"loading\">Loading..</div>\r\n        ): ( '' )}\r\n        { error ? (\r\n            <div className=\"error\">{error.message}</div>\r\n            ): ''}\r\n        </div>\r\n    )\r\n}\r\nexport default LoginPage;","import React ,{\r\n    useState,\r\n   useEffect ,\r\n   useRef,\r\n} from 'react';\r\nimport {useUser ,useUserActions} from './UserContext'\r\n\r\n\r\nconst UserMenu = () => {\r\n    const [isMenuVisible, setMenuVisible] = useState(false);\r\n\r\n    const avatarRef = useRef();\r\n    const {user}= useUser();\r\n    const {logout: onLogout} = useUserActions();\r\n    const hideMenu = event => {\r\n        // Ignore clicks on the avatar\r\n        // so that the menu can open \r\n        if(event.target !== avatarRef.current){\r\n            setMenuVisible(false);\r\n        }\r\n    };\r\n\r\n    const toggleMenu = () => {\r\n        setMenuVisible(vis => !vis);\r\n    };\r\n\r\n    useEffect( () => {\r\n        document.addEventListener('click' , hideMenu);\r\n        return () => \r\n        document.removeEventListener('click' , hideMenu)\r\n    });\r\n    return (\r\n        <div className=\"UserMenu\">\r\n        <img \r\n        className =\"UserAvatar\"\r\n         src= {user.avatar} \r\n         alt=\"User Avatar\"\r\n        onClick = {toggleMenu}\r\n        ref = {avatarRef}\r\n        />\r\n        {isMenuVisible && (\r\n            <ul>\r\n            <li onClick = {onLogout}>Logout</li>\r\n            </ul>\r\n        )}\r\n        </div>\r\n    )\r\n}\r\nexport default UserMenu;","import React from 'react';\r\nimport UserMenu from './UserMenu'\r\n\r\nconst Header = () => \r\n (\r\n    <header className=\"Header\">\r\n    <h2>MyMail</h2>\r\n    <UserMenu  />\r\n    </header>\r\n )\r\nexport default Header;","import React, {useState , useContext , useEffect,\r\n    useCallback, useMemo\r\n} from 'react'\r\n\r\n\r\nconst NotifyContext = React.createContext();\r\n\r\nexport function NotifyProvider({children}){\r\nconst [messages , setMessages] = useState([]);\r\n\r\nconst addMessage = useCallback( text => {\r\n setMessages(msgs => [\r\n     ...msgs,\r\n     {\r\n         id: Math.random(),\r\n         text,\r\n         addedAt: new Date().getTime()\r\n\r\n     }\r\n ]);\r\n},[] );\r\n\r\nconst removeMessage = useCallback ( msg => {\r\n    setMessages(messages => messages.filter( m => m !== msg)\r\n    );\r\n} ,[]);\r\nuseEffect( () => {\r\n    const cleanup = () => {\r\nconst now = new Date().getTime();\r\n  setMessages( msgs => msgs.filter(\r\n      m => now - m.addedAt < 3000\r\n  ))\r\n    }\r\n const timer = setInterval(cleanup ,6000)\r\n\r\n return () => clearInterval(timer);\r\n} , [])\r\nconst value = useMemo( () => (\r\n    {\r\n        messages , addMessage \r\n     }\r\n) ,[messages , addMessage])\r\n\r\n\r\nreturn (\r\n \r\n    <NotifyContext.Provider value ={value}>\r\n    <div className=\"notification-wrapper\">\r\n    <ul>\r\n    {messages.map( msg => (\r\n        <Notification\r\n        key = {msg.id}\r\n        message = {msg}\r\n        onClose = {() => removeMessage(msg)}\r\n        />\r\n    ))}\r\n    </ul>\r\n    </div>\r\n    {children}\r\n    </NotifyContext.Provider>\r\n)\r\n}\r\n\r\nconst Notification = ({ message , onClose}) =>  (\r\n    <li className=\"notification\">\r\n   <span>  {message.text} </span>\r\n     <button className = \"close\" onClick = {onClose}>\r\n     &times;\r\n     </button>\r\n     </li> \r\n     )\r\n\r\nexport function useNotify(){\r\n   return useContext(NotifyContext)\r\n}","import React , { useEffect , useContext , useReducer, useMemo , useCallback } from 'react'\r\nimport {fetchEmails , fetchLatestEmails} from './api'\r\nimport {useUser} from './UserContext'\r\nimport {useNotify} from './NotifyContext'\r\nconst EmailContext =  React.createContext();\r\n\r\nfunction reducer(state , action){\r\n   switch(action.type){\r\n       case 'begin': \r\n       return {\r\n           ...state ,\r\n           loading: true,\r\n          error: null\r\n           }\r\n       case 'success':\r\n           return {\r\n               ...state,\r\n               loading: false,\r\n               emails: action.emails,\r\n           }\r\n       case 'error':  \r\n        return {\r\n            ...state,\r\n            loading: false ,\r\n            error : action.error\r\n             }\r\n       case 'select_email':\r\n           return {\r\n               ...state ,\r\n               currentEmail: action.email\r\n           }\r\n       case  'add_emails': \r\n       return {\r\n           ...state,\r\n           emails: [ ...state.emails, ...action.emails   ]\r\n       }\r\n       default: \r\n       return state;\r\n   }\r\n}\r\n\r\nexport function EmailProvider({ children}) {\r\n   \r\n   const [state , dispatch] = useReducer(reducer , {\r\n      emails: [],  \r\n      loading: false ,\r\n      error: null,\r\n      currentEmail: null\r\n    }\r\n    );\r\n//    console.log(state.currentEmail)\r\n    const {user} = useUser();\r\n    const {addMessage} = useNotify();\r\n   \r\n    // fetch emails\r\n    useEffect(() => {\r\n     dispatch({ type: 'begin'})\r\n     fetchEmails()\r\n     .then( emails => dispatch({type: 'success' , emails}))\r\n     .catch(error => dispatch({type: 'error' , error }))\r\n    },[])\r\n\r\n    useEffect( () => {\r\n        const refresh = () => {\r\n            if(!state.loading){\r\n                fetchLatestEmails()\r\n                .then(emails => {\r\n                    if(emails.length > 0){\r\n                        dispatch({type : 'add_emails' , emails})\r\n                        // Notify\r\n                        addMessage(`${emails.length} email${\r\n                            emails.length === 1 ? '' : 's'  \r\n                           }   arrived `)  \r\n                            // console.log(state)\r\n                    }\r\n                } )\r\n            }\r\n        }\r\n        let timer;\r\n        if(user){\r\n       timer =  setInterval(refresh ,1000)\r\n        }\r\n        return () => clearInterval(timer)\r\n    })\r\n\r\n     const setCurrentEmail = useCallback( email => \r\n         dispatch({type: 'select_email', email})\r\n      ,[])\r\n    \r\n    const value = useMemo( () => {\r\n        return ( { ...state , \r\n       setCurrentEmail\r\n     } )\r\n     } ,[state ,\r\n        setCurrentEmail\r\n    ]) ;\r\n\r\n    return (\r\n        <EmailContext.Provider value ={value}>\r\n        {children}\r\n        </EmailContext.Provider>\r\n    )\r\n}\r\n\r\nexport function useEmail(){\r\n    return useContext(EmailContext);\r\n}","import React from 'react';\r\nimport {useUser} from './UserContext'\r\nimport {useEmail} from './EmailContext'\r\n\r\n// UserContext.consumer requires render so use callback\r\n\r\n\r\nconst MessageList = () => {\r\n    const user = useUser();\r\n    const {\r\n      emails ,\r\n      loading,\r\n      error,\r\n      setCurrentEmail\r\n    } = useEmail();\r\n   \r\n \r\n   return (\r\n     <div className=\"MessageList\">\r\n     {error ? (\r\n       <div className=\"no-messages\">Error!</div>\r\n     ): loading ? (\r\n       <div className=\"loading\">Loading ...</div>\r\n     ) : emails.length === 0 ? (<div className=\"no-messages\">\r\n     Your mailbox is empty , {user.firstName}!\r\n     </div>) : (\r\n       <ul>\r\n       {emails.map(email => (\r\n           <Email\r\n           key = {email.id}\r\n           email = {email}\r\n            onClick = {() => setCurrentEmail(email)}\r\n           />\r\n            ))}\r\n       </ul>\r\n     )}\r\n    \r\n    </div>\r\n   )};\r\n\r\n   const Email = React.memo( ({email , onClick })  => {\r\n   return (\r\n     <li className=\"messages\" onClick = {() => onClick(email)} >\r\n     <div className=\"subject\">{email.subject}</div>\r\n     <div className=\"preview\">{email.preview}</div>\r\n     </li>\r\n   )\r\n  \r\n   } )\r\n\r\nexport default MessageList;","import React from 'react'\r\nimport {useEmail} from './EmailContext'\r\n\r\nconst MessageViewer = () => {\r\n  const {currentEmail , setCurrentEmail} = useEmail();\r\n\r\n  return (\r\n      <div className=\"MessageViewer\">\r\n      <button onClick = {() => setCurrentEmail(null)}>\r\n      Back\r\n      </button>\r\n      <h2>{currentEmail.subject}</h2>\r\n      <div>{currentEmail.body}</div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default MessageViewer;","import React from 'react';\r\nimport Header from './Header'\r\nimport MessageList from './MessageList'\r\nimport MessageViewer from './MessageViewer'\r\nimport { useEmail} from './EmailContext'\r\n\r\nconst MainPage = () => {\r\n const {currentEmail} = useEmail()\r\nreturn (<>\r\n <Header/>\r\n <main>\r\n {currentEmail ? <MessageViewer/> : <MessageList /> }\r\n </main>\r\n  </>\r\n)\r\n};\r\n\r\nexport default MainPage;","import React from 'react'\r\nimport  {UserProvider } from './UserContext';\r\nimport {EmailProvider} from './EmailContext'\r\nimport {NotifyProvider} from './NotifyContext'\r\n\r\nfunction Providers({children}) {\r\n \r\n    return (  \r\n    <NotifyProvider>\r\n    <UserProvider>\r\n    \r\n    <EmailProvider> {children} </EmailProvider>\r\n    </UserProvider> \r\n    </NotifyProvider>\r\n    \r\n )\r\n  }\r\n  export default Providers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport LoginPage from './LoginPage';\nimport MainPage from './MainPage';\nimport { useUser } from './UserContext'\nimport Providers from './Providers'\nimport './index.css';\n\nfunction Root() {\n  const user = useUser();\n  return user ? <MainPage /> : <LoginPage />\n}\n\n\nReactDOM.render(\n  <Providers> <Root /> </Providers>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}